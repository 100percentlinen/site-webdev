---
layout: angular
title: Default, Redirect and Wildcard Routes
sideNavGroup: advanced
prevpage:
  title: Routing Basics
  url: /angular/guide/router/1
nextpage:
  title: Imperative Navigation and Route Parameters
  url: /angular/guide/router/3
---
//- FilePath: src/angular/guide/router/2.jade
include ../../_util-fns
- var _example = 'router';
include _milestone-nav
script $('#router-milestone').val('2')

//- .l-main-section
//- :marked
  ## Milestone 2: *Default*, *redirect* and *wildcard* routes

a#default-route
:marked
  ## Default route

  The initial URL in the browser bar after the application launches is something like:
  `localhost:8080`.

:marked
  That doesn't match any of the configured routes, which means that the application won't 
  display any component when it's launched.
  The user must click one of the links to trigger a navigation and component display.

  It would be nicer if the application had a **_default_ route** 
  that displayed the list of heroes immediately.
  One way to achieve this is to add `useAsDefault: true` as an argument
  to the `Heroes` route definition:

+makeExcerpt('lib/app_component_2.dart', 'Route.useAsDefault')

:marked
  **Refresh the browser** and try it. Notice that the heroes list is displayed when the application launches.

:marked
  ## Redirect route

  As an alternative solution, remove the `useAsDefault` argument that you just added,
  and instead add a `Redirect` route that will translate an initial relative URL (`''`)
  to the desired default path (`/heroes`).
  
  **Refresh the browser** and try it. Now the browser address bar shows `.../heroes` 
  as if you'd navigated there directly.

+makeExcerpt('lib/app_component_2.dart', 'Redirect')

:marked
  ## Wildcard route

  While you've created routes to `/crisis-center` and `/heroes`,
  what if the router is given another URL?
  Add a **wildcard** route to intercept all other URLs.

  A _wildcard_ route is a route with a path starting with `/*`, followed by at least one character.
  Such a route matches _every_ URL.

.l-sub-section
  :marked
    The substring following the initial `/*` in a wildcard path defines the path segment name.
    By convention, the path `/**` is used, resulting in a path segment name of just `*`.

:marked
  The router will select a wildcard route if it can't match a route earlier in the configuration.
  A wildcard route can navigate to a custom "404 Not Found" component or
  [redirect](#redirect-route) to an existing route, for example:

+makeExcerpt('lib/app_component_2.dart', 'wildcard')

#wrap-up
:marked
  ## Application code

  In this short iteration you've tried default, redirect and wildcard routes.
  Here are the files that were added or edited:

+makeTabs(
  `router/dart/lib/app_component_2.dart,
  router/dart/lib/not_found_component.dart`,
  '',
  `lib/app_component.dart,
  lib/not_found_component.dart`)


//- .filetree
  .file router_example
  .children
    .file lib
    .children
      .file app_component.dart
      .file crisis_center_component.dart
      .file heroes.component.dart
      .file not_found_component.dart
    .file web
    .children
      .file index.html
      .file main.dart
      .file styles.css

//- makeTabs(
  `router/dart/lib/app_component_2.dart,
  router/dart/lib/crisis_center_component_1.dart,
  router/dart/lib/heroes_component_1.dart,
  router/dart/lib/not_found_component.dart,
  router/dart/web/index.html,
  router/dart/web/main_2.dart`,
  '',
  `lib/app_component.dart,
  lib/crisis_center_component.dart,
  lib/heroes_component.dart,
  lib/not_found_component.dart
  web/index.html,
  web/main.dart`)
