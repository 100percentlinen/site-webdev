---
layout: angular
title: The Starter App
description: We look at a simple Angular app
prevpage:
  title: "Tutorial: Tour of Heroes"
  url: /angular/tutorial
nextpage:
  title: The Hero Editor
  url: /angular/tutorial/toh-pt1
---
//- FilePath: src/angular/tutorial/toh-pt0.jade
include ../_util-fns

- var _example = 'toh-0';

:marked
  This tutorial starts with a bare-bones Angular app.
  Run the <live-example name="quickstart">live example</live-example>
  to see the app.

  ## Create the app

  Let's get started.

  Create a project named `angular_tour_of_heroes`,
  using WebStorm or the command line
  and the [angular-examples/quickstart](https://github.com/angular-examples/quickstart)
  GitHub project.
  For detailed instructions, see [Setup for Development](/angular/guide/setup).

  Whenever you change the app, reload the browser window.
  As you update the code, the `pub` tool detects the change and
  serves the new app.

  ## Angular app basics

  Angular applications are made up of _components_.
  A _component_ is the combination of an HTML template and a component class that controls a portion of the screen. The starter app has a component that displays a simple string:

+makeExample('lib/app_component.dart')

:marked
  Every component begins with an `@Component` [!{_decorator}](../glossary.html#!{_decorator} '"!{_decorator}" explained')
  <span if-docs="ts">function</span> that
  <span if-docs="ts">takes a _metadata_ object. The metadata object</span> describes how the HTML template and component class work together.

  The `selector` property tells Angular to display the component inside a custom `<my-app>` tag in the `index.html`.

+makeExcerpt('web/index.html (inside <body>)', 'my-app')

:marked
  The `template` property defines a message inside an `<h1>` header.
  The message starts with "Hello" and ends with `{% raw %}{{name}}{% endraw %}`,
  which is an Angular [interpolation binding](../guide/displaying-data.html) expression.
  At runtime, Angular replaces `{% raw %}{{name}}{% endraw %}` with
  the value of the component's `name` property.
  Interpolation binding is one of many Angular features you'll discover in this documentation.

a#seed
:marked
  ## The starter app's code

  The app contains the following core files:

+makeTabs(`
    toh-0/lib/app_component.dart,
    toh-0/test/app_test.dart,
    toh-0/web/main.dart,
    toh-0/web/index.html,
    toh-0/web/styles.css,
    toh-0/pubspec.yaml`,
  ',,,,quickstart,initial',
  `lib/app_component.dart,
  test/app_test.dart,
  web/main.dart,
  web/index.html,
  web/styles.css (excerpt),
  pubspec.yaml`)

:marked
  These files are organized as follows:

.filetree
  .file angular_tour_of_heroes
  .children
    .file lib
    .children
      .file app_component.dart
    .file test
    .children
      .file app_test.dart
    .file web
    .children
      .file main.dart
      .file index.html
      .file styles.css
    .file pubspec.yaml

:marked
  All the examples in this documentation have _at least these core files_.
  Each file has a distinct purpose and evolves independently as the application grows.

style td, th {vertical-align: top}
table(width="100%")
  col(width="20%")
  col(width="80%")
  tr
    th File
    th Purpose
  tr
    td <code>lib/app_component.dart</code>
    td
      :marked
        Defines `<my-app>`, the **root** component of what will become a tree of nested components
        as the application evolves.
  tr
    td <code>test/app_test.dart</code>
    td
      :marked
        Defines `AppComponent` tests.
        While testing isn't covered in this tutorial,
        you can learn how to test the Tour of Heroes
        app from the [Testing](../guide/testing) page.
  tr
    td <code>web/main.dart</code>
    td
      :marked
        Bootstraps the application to run in the browser.
  tr
    td <code>web/index.html</code>
    td
      :marked
        Contains the `<my-app>` tag in its `<body>`.
        This is where the app lives!
  tr
    td <code>web/styles.css</code>
    td
      :marked
        A set of styles used throughout the app.
  tr
    td <code>pubspec.yaml</code>
    td
      :marked
        The file that describes this Dart package (the app) and its dependencies.
        For example, it specifies the **angular2** and **browser** packages as dependencies,
        as well as the **angular2** transformer.

        **Note:** The **dart_to_js_script_rewriter** transformer, if present,
        must be **after angular2** in the **transformers** list.
        If the order is wrong, Angular templates don't work.

.l-main-section
:marked
  ## What's next

  In the [next tutorial page](./toh-pt1),
  you'll modify the starter app to display more interesting data,
  and to allow the user to edit that data.
