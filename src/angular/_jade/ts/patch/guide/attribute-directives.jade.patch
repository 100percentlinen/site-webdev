diff --git a/./src/angular/_jade/ts/latest/guide/attribute-directives.jade b/./src/angular/guide/attribute-directives.jade
index 4605bb6..193e54d 100644
--- a/./src/angular/_jade/ts/latest/guide/attribute-directives.jade
+++ b/./src/angular/guide/attribute-directives.jade
@@ -1,22 +1,25 @@
-block includes
-  //- include ../_util-fns
+---
+layout: angular
+title: Attribute Directives
+description: Attribute directives attach behavior to elements.
+sideNavGroup: advanced
+prevpage:
+  title: Template Syntax
+  url: /angular/guide/template-syntax
+nextpage:
+  title: Component Styles
+  url: /angular/guide/component-styles
+---
+//- FilePath: src/angular/guide/attribute-directives.jade
+
+- var _example = 'attribute-directives';
+include ../_util-fns
 
 :marked
   An **Attribute** directive changes the appearance or behavior of a DOM element.
 
-  # Contents
+  Try the <live-example></live-example>.
 
-  * [Directives overview](#directive-overview)
-  * [Build a simple attribute directive](#write-directive)
-  * [Apply the attribute directive to an element in a template](#apply-directive)
-  * [Respond to user-initiated events](#respond-to-user)
-  * [Pass values into the directive with an _@Input_ data binding](#bindings)
-  * [Bind to a second property](#second-property)
-
-  Try the <live-example title="Attribute Directive example"></live-example>.
-
-.l-main-section#directive-overview
-:marked
   ## Directives overview
 
   There are three kinds of directives in Angular:
@@ -26,15 +29,15 @@ block includes
   1. Attribute directives&mdash;change the appearance or behavior of an element, component, or another directive.
 
   *Components* are the most common of the three directives.
-  You saw a component for the first time in the [QuickStart](../quickstart.html) guide.
+  You saw a simple component in the [Starter App](../tutorial/toh-pt0).
 
   *Structural Directives* change the structure of the view.
   Two examples are [NgFor](template-syntax.html#ngFor) and [NgIf](template-syntax.html#ngIf).
-  Learn about them in the [Structural Directives](structural-directives.html) guide.
+  Learn about them in the [Structural Directives](structural-directives.html) page.
 
   *Attribute directives* are used as attributes of elements.
-  The built-in [NgStyle](template-syntax.html#ngStyle) directive in the 
-  [Template Syntax](template-syntax.html) guide, for example,
+  The built-in [NgStyle](template-syntax.html#ngStyle) directive in the
+  [Template Syntax](template-syntax.html) page, for example,
   can change several element styles at the same time.
 
 .l-main-section#write-directive
@@ -63,17 +66,6 @@ block includes
 +makeExample('app/highlight.directive.1.ts')
 
 :marked
-  The `import` statement specifies symbols from the Angular `core`:
-
-  1. `Directive` provides the functionality of the `@Directive` decorator.
-  1. `ElementRef` [injects](dependency-injection.html) into the directive's constructor
-  so the code can access the DOM element.
-  1. `Input` allows data to flow from the binding expression into the directive.
-
-  Next, the `@Directive` decorator function contains the directive metadata in a configuration object
-  as an argument.
-
-:marked
   `@Directive` requires a CSS selector to identify
   the HTML in the template that is associated with the directive.
   The [CSS selector for an attribute](https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors)
@@ -119,16 +111,11 @@ block includes
 +makeExample('app/app.component.1.html')
 
 :marked
-  Now reference this template in the `AppComponent`:
-
-+makeExample('app/app.component.ts')
-
-:marked
-  Next, add an `import` statement to fetch the `Highlight` directive and
-  add that class to the `declarations` NgModule metadata. This way Angular
+  Now reference this template in the `AppComponent`, and
+  add the `Highlight` directive to the `directives` list. This way Angular
   recognizes the directive when it encounters `myHighlight` in the template.
 
-+makeExample('app/app.module.ts')
++makeExample('app/app.component.ts')
 
 :marked
   Now when the app runs, the `myHighlight` directive highlights the paragraph text.
@@ -140,7 +127,7 @@ figure.image-display
   :marked
     ### Your directive isn't working?
 
-    Did you remember to add the directive to the `declarations` attribute of `@NgModule`? 
+    Did you remember to set the `directives` attribute of `@Component`?
     It is easy to forget!
     Open the console in the browser tools and look for an error like this:
 
@@ -149,10 +136,9 @@ figure.image-display
       Can't bind to 'myHighlight' since it isn't a known property of 'p'.
 
   :marked
-    Angular detects that you're trying to bind to *something* but it can't find this directive
-    in the module's `declarations` array.
-    After specifying `HighlightDirective` in the `declarations` array,
-    Angular knows it can apply the directive to components declared in this module.
+    Angular detects that you're trying to bind to *something*
+    but it can't find this directive.
+    You let Angular know by listing `HighlightDirective` in the `directives` list.
 
 :marked
   To summarize, Angular found the `myHighlight` attribute on the `<p>` element.
@@ -169,13 +155,7 @@ figure.image-display
   It could detect when the user mouses into or out of the element
   and respond by setting or clearing the highlight color.
 
-  Begin by adding `HostListener` to the list of imported symbols;
-  add the `Input` symbol as well because you'll need it soon.
-
-+makeExcerpt('app/highlight.directive.ts', 'imports', '')
-
-:marked
-  Then add two eventhandlers that respond when the mouse enters or leaves,
+  Add two eventhandlers that respond when the mouse enters or leaves,
   each adorned by the `HostListener` !{_decorator}.
 
 +makeExcerpt('app/highlight.directive.2.ts','mouse-methods', '')
@@ -366,20 +346,18 @@ figure.image-display
   The final source code follows:
 
 +makeTabs(
-  `attribute-directives/ts/app/app.component.ts,
-   attribute-directives/ts/app/app.component.html,
-   attribute-directives/ts/app/highlight.directive.ts,
-   attribute-directives/ts/app/app.module.ts,
-   attribute-directives/ts/main.ts,
-   attribute-directives/ts/index.html
+  `attribute-directives/dart/lib/app_component.dart,
+   attribute-directives/dart/lib/app_component.html,
+   attribute-directives/dart/lib/highlight_directive.dart,
+   attribute-directives/dart/web/main.dart,
+   attribute-directives/dart/web/index.html
   `,
   '',
-  `app/app.component.ts,
-   app/app.component.html,
-   app/highlight.directive.ts,
-   app/app.module.ts,
-   main.ts,
-   index.html
+  `lib/app_component.dart,
+   lib/app_component.html,
+   lib/highlight_directive.dart,
+   web/main.dart,
+   web/index.html
   `)
 
 :marked
