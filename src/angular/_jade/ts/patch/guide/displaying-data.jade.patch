diff --git a/./src/angular/_jade/ts/latest/guide/displaying-data.jade b/./src/angular/guide/displaying-data.jade
index 94133c0..4379cfa 100644
--- a/./src/angular/_jade/ts/latest/guide/displaying-data.jade
+++ b/./src/angular/guide/displaying-data.jade
@@ -1,8 +1,21 @@
-block includes
-  //- include ../_util-fns
-  - var _iterableUrl = 'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols';
-  - var _boolean = 'truthy/falsy';
-
+---
+layout: angular
+title: Displaying Data
+description: Property binding helps show app data in the UI.
+sideNavGroup: basic
+prevpage:
+  title: Architecture Overview
+  url: /angular/guide/architecture
+nextpage:
+  title: User Input
+  url: /angular/guide/user-input
+---
+//- FilePath: src/angular/guide/displaying-data.jade
+- var _example = 'displaying-data';
+include ../_util-fns
+- var _iterableUrl = 'https://api.dartlang.org/stable/dart-core/Iterable-class.html';
+- var _boolean = 'boolean';
+  
 :marked
   You can display data by binding controls in an HTML template to properties of an Angular component.
 
@@ -15,13 +28,6 @@ block includes
 figure.image-display
   img(src="/resources/images/devguide/displaying-data/final.png" alt="Final UI")
 
-:marked
-  # Contents
-
-  * [Showing component properties with interpolation](#interpolation).
-  * [Showing !{_an} !{_array} property with NgFor](#ngFor).
-  * [Conditional display with NgIf](#ngIf).
-
 .l-sub-section
   :marked
     The <live-example></live-example> demonstrates all of the syntax and code
@@ -32,7 +38,7 @@ figure.image-display
   ## Showing component properties with interpolation
   The easiest way to display a component property
   is to bind the property name through interpolation.
-  With interpolation, you put the property name in the view template, enclosed in double curly braces: `{{myHero}}`.
+  With interpolation, you put the property name in the view template, enclosed in double curly braces: {% raw %}`{{myHero}}`{% endraw %}.
 
   Follow the [setup](setup.html) instructions for creating a new project
   named `displaying_data`.
@@ -52,14 +58,6 @@ figure.image-display
 
 +makeExcerpt('app/app.component.1.ts', 'template', '')
 
-+ifDocsFor('ts')
-  .l-sub-section
-    :marked
-      The template is a multi-line string within ECMAScript 2015 backticks (<code>\`</code>).
-      The backtick (<code>\`</code>)&mdash;which is *not* the same character as a single
-      quote (`'`)&mdash;allows you to compose a string over several lines, which makes the
-      HTML more readable.
-
 :marked
   Angular automatically pulls the value of the `title` and `myHero` properties from the component and
   inserts those values into the browser. Angular updates the display
@@ -181,22 +179,9 @@ figure.image-display
 
 +makeExcerpt('app/hero.ts')
 
-block hero-class
-  :marked
-    You've defined a class with a constructor and two properties: `id` and `name`.
-
-    It might not look like the class has properties, but it does.
-    The declaration of the constructor parameters takes advantage of a TypeScript shortcut.
-
-    Consider the first parameter:
-
-  +makeExcerpt('app/hero.ts ()', 'id')
-
-  :marked
-    That brief syntax does a lot:
-    * Declares a constructor parameter and its type.
-    * Declares a public property of the same name.
-    * Initializes that property with the corresponding argument when creating an instance of the class.
+:marked
+  You've defined a class with a constructor, two properties (`id` and `name`),
+  and a `toString()` method.
 
 .l-main-section
 :marked
@@ -265,10 +250,10 @@ block hero-class
 
   Here's the final code:
 
-block final-code
-  +makeTabs(`displaying-data/ts/app/app.component.ts,
-             displaying-data/ts/app/hero.ts,
-             displaying-data/ts/app/app.module.ts,
-             displaying-data/ts/main.ts`,
-             'final,,,',
-             'src/app/app.component.ts, app/hero.ts, app/app.module.ts, main.ts')
++makeTabs(`displaying-data/dart/lib/app_component.dart,
+           displaying-data/dart/lib/hero.dart,
+           displaying-data/dart/pubspec.yaml,
+           displaying-data/dart/web/index.html,
+           displaying-data/dart/web/main.dart`,
+           ',,,,final',
+           'lib/app_component.dart, lib/hero.dart, pubspec.yaml, web/index.html, web/main.dart')
